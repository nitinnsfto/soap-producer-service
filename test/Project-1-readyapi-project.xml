<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="07dc13eb-b050-4508-b109-ea050ecea6f3" created="3.46.1" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="Project 1" projectVersion="" updated="3.46.1 2023-05-29T12:08:49Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" id="bd6ee83e-9478-49c8-b2fe-fd79731fd771" wsaVersion="NONE" name="CountriesPortSoap11" type="wsdl" bindingName="{http://spring.io/guides/gs-producing-web-service}CountriesPortSoap11" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/ws/countries.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings id="af0bf875-c0e3-4c9a-981a-120a86f9e8ee"/>
    <con:definitionCache type="TEXT" rootPart="http://localhost:8080/ws/countries.wsdl">
      <con:part>
        <con:url>http://localhost:8080/ws/countries.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions targetNamespace="http://spring.io/guides/gs-producing-web-service" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch="http://spring.io/guides/gs-producing-web-service" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://spring.io/guides/gs-producing-web-service">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://spring.io/guides/gs-producing-web-service" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="getCountryRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="name" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCountryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="country" type="tns:country"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="country">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="population" type="xs:int"/>
          <xs:element name="capital" type="xs:string"/>
          <xs:element name="currency" type="tns:currency"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="currency">
        <xs:restriction base="xs:string">
          <xs:enumeration value="GBP"/>
          <xs:enumeration value="EUR"/>
          <xs:enumeration value="PLN"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getCountryResponse">
    <wsdl:part element="tns:getCountryResponse" name="getCountryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCountryRequest">
    <wsdl:part element="tns:getCountryRequest" name="getCountryRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CountriesPort">
    <wsdl:operation name="getCountry">
      <wsdl:input message="tns:getCountryRequest" name="getCountryRequest"></wsdl:input>
      <wsdl:output message="tns:getCountryResponse" name="getCountryResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CountriesPortSoap11" type="tns:CountriesPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getCountry">
      <soap:operation soapAction=""/>
      <wsdl:input name="getCountryRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCountryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CountriesPortService">
    <wsdl:port binding="tns:CountriesPortSoap11" name="CountriesPortSoap11">
      <soap:address location="http://localhost:8080/ws"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://localhost:8080/ws</con:endpoint>
    </con:endpoints>
    <con:operation id="3a8b8abc-46fb-4fc8-b221-760ce804fc88" isOneWay="false" action="" name="getCountry" bindingOperationName="getCountry" type="Request-Response" outputName="getCountryResponse" inputName="getCountryRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="61b6fcec-e37b-4650-8a17-ee54a7f26e13" name="getCountry Request">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ws</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:gs="http://spring.io/guides/gs-producing-web-service">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <gs:getCountryRequest>\r
         <gs:name>?</gs:name>\r
      </gs:getCountryRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://spring.io/guides/gs-producing-web-service/CountriesPort/getCountryRequest"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:testSuite id="6f9be8a4-5ee2-42e4-888d-084571fd5644" name="Project 1 Test Suite 1">
    <con:settings id="b2466ff9-3015-4944-b254-8813c2b85784"/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="41ff1ecc-14c4-4fb7-a993-8d24a4e1fdf7" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="CountriesPortSoap11-getCountry-getCountry Request Test Case" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="datasource" name="Data Source" id="7171045f-eebd-4ae9-b862-9bd5ef42d6ce">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="Data Generator">
            <con:configuration>
              <generatedDataCount>10</generatedDataCount>
              <generatorsTotalNumber>1</generatorsTotalNumber>
              <lastSelectedProperty>0</lastSelectedProperty>
              <GeneratorType0>NAME</GeneratorType0>
              <PropertyName0>name</PropertyName0>
              <repetitionCountname>1</repetitionCountname>
              <repeatValuesname>false</repeatValuesname>
              <NameTypeName0>Full</NameTypeName0>
              <NameGenderName0>Any</NameGenderName0>
              <escapeSpaceSequence/>
            </con:configuration>
          </con:dataSource>
          <con:shared>false</con:shared>
          <con:restartShared>false</con:restartShared>
          <con:property>name</con:property>
          <con:restartOnRun>true</con:restartOnRun>
          <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
        </con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Data Source 2" id="9886915e-d973-46df-bab7-31cb1dac6a87">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="Data Generator">
            <con:configuration>
              <generatedDataCount>10</generatedDataCount>
              <generatorsTotalNumber>1</generatorsTotalNumber>
              <lastSelectedProperty>0</lastSelectedProperty>
              <GeneratorType0>NAME</GeneratorType0>
              <PropertyName0>name</PropertyName0>
              <repetitionCountname>0</repetitionCountname>
              <repeatValuesname>false</repeatValuesname>
              <NameTypeName0>Full</NameTypeName0>
              <NameGenderName0>Any</NameGenderName0>
              <escapeSpaceSequence/>
            </con:configuration>
          </con:dataSource>
          <con:shared>false</con:shared>
          <con:restartShared>false</con:restartShared>
          <con:property>name</con:property>
          <con:restartOnRun>true</con:restartOnRun>
          <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
        </con:config>
      </con:testStep>
      <con:testStep type="request" id="66289d42-227b-44bb-a297-35c62c4aa235" name="getCountry getCountry Request">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CountriesPortSoap11</con:interface>
          <con:operation>getCountry</con:operation>
          <con:request name="getCountry getCountry Request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4b409cf7-f8e9-436b-9077-87231bdb4de0">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ws</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:gs="http://spring.io/guides/gs-producing-web-service">
   <soapenv:Header/>
   <soapenv:Body>
      <gs:getCountryRequest>
         <gs:name>Spain</gs:name>
      </gs:getCountryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="c3adabbb-037a-47bb-a793-0ad4fd5dbc6a" name="SOAP Response"/>
            <con:assertion type="Valid HTTP Status Codes" id="88d55b17-117c-4795-b208-3d5a9cbc9dd7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" id="dcb75534-0f14-48d9-966d-55447dd41d7e" name="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="a7615c85-0c7e-4057-b511-254d7b45aeee" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="e46a45b5-00c2-4c5a-ace2-ccf56bf61efa" name="Not SOAP Fault"/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://spring.io/guides/gs-producing-web-service/CountriesPort/getCountryRequest"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="Data Source Loop 2" id="f8a24c8e-9288-4422-b8a0-b7b6213407d3">
        <con:settings/>
        <con:config>
          <dataSourceStep>Data Source 2</dataSourceStep>
          <targetStep>getCountry getCountry Request</targetStep>
          <discardResults>true</discardResults>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="Data Source Loop" id="00fc5ea6-eb16-446e-918d-56fb9c7dd6b9">
        <con:settings/>
        <con:config>
          <dataSourceStep>Data Source</dataSourceStep>
          <targetStep>getCountry getCountry Request</targetStep>
          <discardResults>true</discardResults>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
